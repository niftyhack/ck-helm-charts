{{ template "chart.header" . }}
{{ template "chart.description" . }}

## TL;DR;

```console
helm repo add christianhuth https://charts.christianhuth.de
helm repo update
helm install my-release christianhuth/argocd-metrics-server
```

## Introduction

This chart bootstraps the [ArgoCD Metrics Server](https://github.com/argoproj-labs/argocd-extension-metrics) on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager.

## Prerequisites

- Kubernetes 1.19+
- Argo CD version 2.6+
- Prometheus

## Installing the Chart

To install the chart with the release name `my-release`:

```console
helm repo add christianhuth https://charts.christianhuth.de
helm repo update
helm install my-release christianhuth/argocd-metrics-server
```

These commands deploy the ArgoCD Metrics Server on the Kubernetes cluster in the default configuration. The [Values](#values) section lists the values that can be configured during installation.

> **Tip**: List all releases using `helm list`

## Uninstalling the Chart

To uninstall the `my-release` deployment:

```console
helm uninstall my-release
```

The command removes all the Kubernetes components associated with the chart and deletes the release.

{{ template "chart.valuesSection" . }}

Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`.

Alternatively, a YAML file that specifies the values for the parameters can be provided while installing the chart. For example,

```console
helm install my-release -f values.yaml christianhuth/argocd-metrics-server
```

# Configuring Argo CD

After a successful installation of the Argo CD Metrics Server you need to configure Argo CD to display Metrics in the UI.

Assuming you are using the official Argo CD Helm Chart, this can be achieved with the following values:

```yaml
configs:
  # this part configures the UI extension to use the Argo CD Metrics Server
  # make sure to adjust the URL to your installation
  cm:
    extension.config: |-
      extensions:
        - name: metrics
          backend:
            services:
              - url: http://argocd-metrics-server.argo.svc:9003
  # this part enables the proxy extension feature of Argo CD
  params:
    server.enable.proxy.extension: true
  # this part authorizes users to use the Metrics extension
  rbac:
    policy.csv: |
      p, role:readonly, extensions, invoke, metrics, allow
server:
  # this part downloads the UI extension and integrates it into the Argo CD UI
  extensions:
    enabled: true
    extensionList:
      - name: extension-metrics
        env:
          - name: EXTENSION_URL
            value: https://github.com/argoproj-labs/argocd-extension-metrics/releases/download/v1.0.3/extension.tar.gz
          - name: EXTENSION_CHECKSUM_URL
            value: https://github.com/argoproj-labs/argocd-extension-metrics/releases/download/v1.0.3/extension_checksums.txt
```
